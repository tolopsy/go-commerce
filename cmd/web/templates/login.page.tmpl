{{template "base" .}}

{{define "title"}}
    Login
{{end}}

{{define "content"}}
<h2 class="mt-3 text-center">Login</h2>
<hr>
 <div class="alert alert-danger text-center d-none" id="login-messages"></div>
 <form action="" method="post" name="login_form" id="login_form"
        class="d-block needs-validation login-form" autocomplete="off" novalidate>
    <div class="mb-3">
        <label for="email" class="form-label">Email</label>
        <input type="email" class="form-control" id="email" name="email" required>
    </div>

    <div class="mb-3">
        <label for="password" class="form-label">Password</label>
        <input type="password" class="form-control" id="password" name="password" required>
    </div>

    <a href="javascript:void(0)" class="btn btn-primary mb-3" onclick="val()">
        Login
    </a>
</form>
{{end}}

{{ define "js"}}
<script>
    let loginMessages = document.getElementById("login-messages")
    function showError(msg) {
        loginMessages.classList.add("alert-danger")
        loginMessages.classList.remove("alert-success")
        loginMessages.classList.remove("d-none")
        loginMessages.innerText = msg
    }

    function showSuccess() {
        loginMessages.classList.remove("alert-danger")
        loginMessages.classList.add("alert-success")
        loginMessages.classList.remove("d-none")
        loginMessages.innerText = "Login Successful"
    }

 function val() {
    let form = document.getElementById("login_form")
    if (form.checkValidity() === false) {
        this.event.preventDefault()
        this.event.stopPropagation()
        form.classList.add("was-validated")
        return
    }
    form.classList.add("was-validated")

    let payload = {
        email: document.getElementById("email").value.trim(),
        password: document.getElementById("password").value.trim(),
    }

    const requestOptions = {
        method: 'post',
        headers: {
            'Accept': 'application/json',
            'Content-Type': 'application/json'
        },
        body: JSON.stringify(payload),
    }

    fetch("{{.API}}/api/authenticate", requestOptions)
        .then(response => response.json())
        .then(data => {
            console.log(data)
            if (data.has_error === false) {
                localStorage.setItem('token', data.authentication_token.token)
                localStorage.setItem('token_expiry', data.authentication_token.expiry)
                showSuccess()
            } else {
                showError(data.message)
            }
        })
 }
</script>
{{end}}