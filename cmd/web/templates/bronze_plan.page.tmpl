{{template "base" .}}

{{define "title"}}
    Bronze Plan
{{end}}

{{define "content"}}
    {{$widget := index .Data "widget"}}

    <h2 class="mt-3 text-center">Bronze Plan</h2>
    <hr>
    <div class="alert alert-danger text-center d-none" id="card-messages"></div>
    <form action="/payment-successful" method="post" name="payment_form" id="payment_form"
        class="d-block needs-validation payment-form" autocomplete="off" novalidate>

        <input type="hidden" name="product_id" id="product_id" value="{{$widget.ID}}">
        <input type="hidden" name="amount" id="amount" value="{{$widget.Price}}">
        <h3 class="mt-2 text-center mb-3">{{formatCurrency $widget.Price}}</h3>
        <p class="text-center">{{$widget.Description}}</p>
        <hr>
        <div class="mb-3">
            <label for="first_name" class="form-label">First Name</label>
            <input type="text" class="form-control" id="first_name" name="first_name" required>
        </div>

        <div class="mb-3">
            <label for="last_name" class="form-label">Last Name</label>
            <input type="text" class="form-control" id="last_name" name="last_name" required>
        </div>

        <div class="mb-3">
            <label for="email" class="form-label">Email</label>
            <input type="email" class="form-control" id="email" name="email" required>
        </div>

        <div class="mb-3">
            <label for="cardholder-name" class="form-label">Name on Card</label>
            <input type="text" class="form-control" id="cardholder-name" name="cardholder_name" required>
        </div>

        <div class="mb-3">
            <label for="card-element" class="form-label">Credit Card</label>
            <div id="card-element" class="form-control"></div>
            <div class="alert-danger text-center" id="card-errors" role="alert"></div>
            <div class="alert-success text-center" id="card-success" role="alert"></div>
        </div>
        <hr>
        <a id="pay-button" href="javascript:void(0)" class="btn btn-primary mb-3" onclick="val()">
            Pay {{formatCurrency $widget.Price}}/month
        </a>
        <div id="processing-payment" class="text-center d-none">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
        <input type="hidden" name="payment_intent" id="payment_intent">
        <input type="hidden" name="payment_method" id="payment_method">
        <input type="hidden" name="payment_amount" id="payment_amount">
        <input type="hidden" name="payment_currency" id="payment_currency">
    </form>
{{end}}

{{define "js"}}
    {{$widget := index .Data "widget"}}
    <script src="https://js.stripe.com/v3/"></script>
    <script>
        let card, stripe;
        const cardMessages = document.getElementById("card-messages")
        const payButton = document.getElementById("pay-button")
        const processing = document.getElementById("processing-payment")
        stripe = Stripe({{index .StringMap "publishable_key"}});
        function showProcessingSpinner(toShow=false) {
            if (toShow) {
                processing.classList.remove("d-none")
            } else if (!toShow) {
                processing.classList.add("d-none")
            }
        }

        function hidePayButton() {
            payButton.classList.add("d-none")
            showProcessingSpinner(true)
        }

        function showPayButton() {
            payButton.classList.remove("d-none")
            showProcessingSpinner(false)
        }

        function showCardError(msg) {
            cardMessages.classList.add("alert-danger")
            cardMessages.classList.remove("alert-success")
            cardMessages.classList.remove("d-none")
            cardMessages.innerText = msg
        }

        function showCardSuccess() {
            cardMessages.classList.remove("alert-danger")
            cardMessages.classList.add("alert-success")
            cardMessages.classList.remove("d-none")
            cardMessages.innerText = "Transaction Successful"
        }

        function val(){
            let form = document.getElementById("payment_form")
            const email = document.getElementById("email").value
            if (form.checkValidity() === false) {
                this.event.preventDefault()
                this.event.stopPropagation()
                form.classList.add("was-validated")
                return
            }
            form.classList.add("was-validated")
            hidePayButton()

            let amountToCharge = document.getElementById("amount").value
            stripe.createPaymentMethod({
                type: "card",
                card: card,
                billing_details: {
                    "email": email
                }
            }).then(stripePaymentMethodHandler)

            function stripePaymentMethodHandler(result) {
                if (result.error) {
                    showCardError(result.error.message)
                } else {
                    // create a customer and subscribe to plan
                    payload = {
                        plan: '{{$widget.PlanID}}',
                        payment_method: result.paymentMethod.id,
                        email: email,
                        last_four: result.paymentMethod.card.last4,
                        card_brand: result.paymentMethod.card.brand,
                        exp_month: result.paymentMethod.card.exp_month,
                        exp_year: result.paymentMethod.card.exp_year,
                        first_name: document.getElementById("first_name").value,
                        last_name: document.getElementById("last_name").value,
                        product_id: document.getElementById("product_id").value,
                        amount: document.getElementById("amount").value,
                        currency: "usd",
                    }

                    requestOptions = {
                        method: 'post',
                        headers: {
                            'Accept': 'application/json',
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify(payload)
                    }
                    try {
                        fetch('{{.API}}/api/create-customer-and-subscribe-to-plan', requestOptions)
                        .then(response => response.json())
                        .then(function(data){
                            console.log(data)
                            showProcessingSpinner(false)
                            if (!data.has_error) {
                                showCardSuccess()
                                // set hidden vars
                                // submit form

                                sessionStorage.first_name = document.getElementById("first_name").value
                                sessionStorage.last_name = document.getElementById("last_name").value
                                sessionStorage.amount = "{{formatCurrency $widget.Price}}"
                                sessionStorage.last_four = result.paymentMethod.card.last4

                                location.href = "/receipt/bronze"
                            }
                        }).catch(err => console.log(err))
                    } catch (err) {
                        console.log(err)
                        showCardError("Invalid response from payment gateway")
                        showPayButton()
                    }
                }
            }
        }
        (function() {
            // create stripe elements
            const elements = stripe.elements();
            const style = {
                base: {
                    fontSize: '16px',
                    lineHeight: '24px',
                }
            };

            // create card element
            card = elements.create('card', {
                style: style,
                hidePostalCode: true, 
            });
            card.mount('#card-element');

            // check for input errors
            card.addEventListener('change', function(event) {
                var errorDiv = document.getElementById("card-errors")
                if (event.error) {
                    errorDiv.classList.remove('d-none')
                    errorDiv.textContent = event.error.message
                } else {
                    errorDiv.classList.add('d-none')
                    errorDiv.textContent = ''
                }
            })
        })();
    </script>
{{end}}
